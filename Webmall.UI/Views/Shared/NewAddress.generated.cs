#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.Globalization;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using HtmlHelpers.BeginCollectionItem;
    
    #line 2 "..\..\Views\Shared\NewAddress.cshtml"
    using ViewRes;
    
    #line default
    #line hidden
    
    #line 1 "..\..\Views\Shared\NewAddress.cshtml"
    using Webmall.Model;
    
    #line default
    #line hidden
    using Webmall.UI;
    
    #line 3 "..\..\Views\Shared\NewAddress.cshtml"
    using Webmall.UI.Core;
    
    #line default
    #line hidden
    using Webmall.UI.Core.Localization;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Shared/NewAddress.cshtml")]
    public partial class _Views_Shared_NewAddress_cshtml : System.Web.Mvc.WebViewPage<Webmall.Model.Entities.Address.Address>
    {
        public _Views_Shared_NewAddress_cshtml()
        {
        }
        public override void Execute()
        {
WriteLiteral(@"<style>
    #delivery-addresses-container.progress {
        opacity: .3;
        pointer-events: none;
    }
    .ui-autocomplete-loading {
        background: white url(""/Content/images/ui-anim_basic_16x16.gif"") right center no-repeat;
    }
</style>

");

            
            #line 15 "..\..\Views\Shared\NewAddress.cshtml"
  
    var latinOnly = ConfigHelper.UserNameLatinOnly;

            
            #line default
            #line hidden
WriteLiteral("\r\n<div");

WriteLiteral(" id=\"dlgAddress\"");

WriteAttribute("title", Tuple.Create(" title=\"", 453), Tuple.Create("\"", 496)
            
            #line 18 "..\..\Views\Shared\NewAddress.cshtml"
, Tuple.Create(Tuple.Create("", 461), Tuple.Create<System.Object, System.Int32>(SharedResources.NewDeliveryAddress
            
            #line default
            #line hidden
, 461), false)
);

WriteLiteral(" style=\"display: none\"");

WriteLiteral(">\r\n");

            
            #line 19 "..\..\Views\Shared\NewAddress.cshtml"
    
            
            #line default
            #line hidden
            
            #line 19 "..\..\Views\Shared\NewAddress.cshtml"
     using (Html.BeginForm((string)ViewBag.NewAddressAction, (string)ViewBag.NewAddressController, FormMethod.Post, new { id = "newAddress-form" }))
    {

            
            #line default
            #line hidden
WriteLiteral("        <label");

WriteLiteral(" class=\"long\"");

WriteLiteral(" hidden>\r\n");

WriteLiteral("            ");

            
            #line 22 "..\..\Views\Shared\NewAddress.cshtml"
       Write(SharedResources.Region);

            
            #line default
            #line hidden
WriteLiteral("<br>\r\n");

WriteLiteral("            ");

            
            #line 23 "..\..\Views\Shared\NewAddress.cshtml"
       Write(Html.TextBoxFor(m => m.RegionName));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("            ");

            
            #line 24 "..\..\Views\Shared\NewAddress.cshtml"
       Write(Html.HiddenFor(m => m.RegionId));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </label>\r\n");

WriteLiteral("        <label");

WriteLiteral(" class=\"long\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 27 "..\..\Views\Shared\NewAddress.cshtml"
       Write(SharedResources.Locality);

            
            #line default
            #line hidden
WriteLiteral("\r\n            <span");

WriteLiteral(" class=\"star\"");

WriteLiteral(">*</span> <br>\r\n");

WriteLiteral("            ");

            
            #line 29 "..\..\Views\Shared\NewAddress.cshtml"
       Write(Html.TextBoxFor(m => m.LocalityName));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("            ");

            
            #line 30 "..\..\Views\Shared\NewAddress.cshtml"
       Write(Html.HiddenFor(m => m.LocalityId));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </label>\r\n");

WriteLiteral("        <label");

WriteLiteral(" class=\"long\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 33 "..\..\Views\Shared\NewAddress.cshtml"
       Write(SharedResources.Street);

            
            #line default
            #line hidden
WriteLiteral(" ");

            
            #line 33 "..\..\Views\Shared\NewAddress.cshtml"
                                Write(latinOnly ? SharedResources.latin_only : "");

            
            #line default
            #line hidden
WriteLiteral("\r\n            <span");

WriteLiteral(" class=\"star\"");

WriteLiteral(">*</span><br>\r\n");

WriteLiteral("            ");

            
            #line 35 "..\..\Views\Shared\NewAddress.cshtml"
       Write(Html.TextBoxFor(m => m.StreetName, new { onkeyup = latinOnly ? "Latin(this);" : "" }));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("            ");

            
            #line 36 "..\..\Views\Shared\NewAddress.cshtml"
       Write(Html.HiddenFor(m => m.StreetId));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </label>\r\n");

WriteLiteral("        <label");

WriteLiteral(" class=\"long\"");

WriteLiteral(" id=\"DistrictRow\"");

WriteLiteral(" style=\"display: none\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 39 "..\..\Views\Shared\NewAddress.cshtml"
       Write(SharedResources.CityDistrict);

            
            #line default
            #line hidden
WriteLiteral(" <br>\r\n");

WriteLiteral("            ");

            
            #line 40 "..\..\Views\Shared\NewAddress.cshtml"
       Write(Html.DropDownList("DistrictId", new List<SelectListItem>()));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </label>\r\n");

WriteLiteral("        <label");

WriteLiteral(" class=\"short\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 43 "..\..\Views\Shared\NewAddress.cshtml"
       Write(SharedResources.House);

            
            #line default
            #line hidden
WriteLiteral(" <span");

WriteLiteral(" class=\"star\"");

WriteLiteral(">*</span> <br>\r\n");

WriteLiteral("            ");

            
            #line 44 "..\..\Views\Shared\NewAddress.cshtml"
       Write(Html.TextBoxFor(m => m.House));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </label>\r\n");

WriteLiteral("        <label");

WriteLiteral(" class=\"short no-margin\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 47 "..\..\Views\Shared\NewAddress.cshtml"
       Write(SharedResources.Apartment);

            
            #line default
            #line hidden
WriteLiteral(" <br>\r\n");

WriteLiteral("            ");

            
            #line 48 "..\..\Views\Shared\NewAddress.cshtml"
       Write(Html.TextBoxFor(m => m.Flat));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </label>\r\n");

WriteLiteral("        <label");

WriteLiteral(" class=\"long\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 51 "..\..\Views\Shared\NewAddress.cshtml"
       Write(SharedResources.Comment);

            
            #line default
            #line hidden
WriteLiteral(" <br>\r\n            <span");

WriteLiteral(" id=\"commentLength\"");

WriteLiteral(">\r\n");

WriteLiteral("                ");

            
            #line 53 "..\..\Views\Shared\NewAddress.cshtml"
           Write(SharedResources.Remain);

            
            #line default
            #line hidden
WriteLiteral(":\r\n                <span");

WriteLiteral(" id=\"rest\"");

WriteLiteral(">100</span>\r\n            </span>\r\n");

WriteLiteral("            ");

            
            #line 56 "..\..\Views\Shared\NewAddress.cshtml"
       Write(Html.TextAreaFor(m => m.Comment));

            
            #line default
            #line hidden
WriteLiteral("\r\n        </label>\r\n");

WriteLiteral("        <label");

WriteLiteral(" class=\"long\"");

WriteLiteral("><span");

WriteLiteral(" class=\"star\"");

WriteLiteral(">* Поля обязательного заполнения</span></label>\r\n");

            
            #line 59 "..\..\Views\Shared\NewAddress.cshtml"
        
            
            #line default
            #line hidden
            
            #line 59 "..\..\Views\Shared\NewAddress.cshtml"
   Write(Html.Button(SharedResources.Save, new { @class = "button-submit", onclick = ViewBag.NewAddressOnSaveClick ?? "upsertDeliveryaddress()" }));

            
            #line default
            #line hidden
            
            #line 59 "..\..\Views\Shared\NewAddress.cshtml"
                                                                                                                                                  

        
            
            #line default
            #line hidden
            
            #line 61 "..\..\Views\Shared\NewAddress.cshtml"
   Write(Html.HiddenFor(m => m.AddressId));

            
            #line default
            #line hidden
            
            #line 61 "..\..\Views\Shared\NewAddress.cshtml"
                                         
    }

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n\r\n<script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(@">

    function upsertDeliveryaddress() {

        if (!$(""#newAddress-form"").valid()) return false;

        $(""#dlgAddress"").dialog('close');
        $('#delivery-addresses-container').addClass('progress');

        var form = $(""#dlgAddress > form"");
        var url = '");

            
            #line 75 "..\..\Views\Shared\NewAddress.cshtml"
              Write(Url.Action("SaveAddress", "Clients"));

            
            #line default
            #line hidden
WriteLiteral(@"';
        var data = form.serialize();
        $.post(url, data, function(content) {
            $('#delivery-addresses-container').html(content);
            $('#delivery-addresses-container').removeClass('progress');
            $('#delivery-addresses-container').trigger('updated');
            if (window.addressEditCallback)
                window.addressEditCallback();
        });

        return false;
    }

    function deleteAddress(addressId) {
        if (!confirm('");

            
            #line 89 "..\..\Views\Shared\NewAddress.cshtml"
                 Write(SharedResources.AreYouSure);

            
            #line default
            #line hidden
WriteLiteral("\')) return;\r\n\r\n        $(\'#delivery-addresses-container\').addClass(\'progress\');\r\n" +
"        $.post(\'");

            
            #line 92 "..\..\Views\Shared\NewAddress.cshtml"
           Write(Url.Action("Delete", "Clients"));

            
            #line default
            #line hidden
WriteLiteral(@"?id='+addressId, null, function(content) {
            $('#delivery-addresses-container').html(content);
            $('#delivery-addresses-container').removeClass('progress');
            $('#delivery-addresses-container').trigger('updated');
        });
    }

    

 
    function jqSelector(str)
    { 
      return str.replace(/([;&,\.\+\*\~':""\!\^#$%\[\]\(\)=>\|])/g, '\\$1'); 
    }

    $(function () {
        $(""#dlgAddress"").dialog({
            id: 'dlgAddress',
            modal: true,
            resizable: false,
            autoOpen: false,
            width: 'auto',
            height: 'auto',
            draggable: true,
            close: function (event, ui) {
                //$('.ac_results').hide();
                return true;
            }
        });

        $.expr[':'].textEquals = function (a, i, m) {
            return $(a).text().toLowerCase().match(""^"" + m[3].toLowerCase() + ""$"");
        };



        $('#RegionName').autocomplete({
            source: '");

            
            #line 129 "..\..\Views\Shared\NewAddress.cshtml"
                Write(Url.Action("GetRegions", "Clients"));

            
            #line default
            #line hidden
WriteLiteral(@"',
            select: function (event, ui) {
                $('#RegionId').val(ui.item.id);
                $('#LocalityName').val('');
                $('#LocalityId').val(null);
                $(""#StreetName"").val('');
                $(""#StreetId"").val(null);
                return true;
            },
            change: function (event, ui) {
                var items = $("".ui-autocomplete li:textEquals('"" + jqSelector( $(this).val()) + ""')"");
                if (items.size() != 1) {
                    $(this).val('');

                } else {
                    $('#RegionId').val(items.data(""ui-autocomplete-item"").id);
                    $('#RegionName').val(items.data(""ui-autocomplete-item"").value);
                    $('#LocalityName').val('');
                    $('#LocalityId').val(null);
                    $(""#StreetName"").val('');
                    $(""#StreetId"").val(null);
                }
            }
        });

        $('#LocalityName').autocomplete({
            source: //'");

            
            #line 155 "..\..\Views\Shared\NewAddress.cshtml"
                  Write(Url.Action("UILocalities", "Clients"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                function (request, response) {\r\n                    $.ajax({\r" +
"\n                        url: \'");

            
            #line 158 "..\..\Views\Shared\NewAddress.cshtml"
                         Write(Url.Action("UILocalities", "Clients"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                        dataType: \"json\",\r\n                        data: {\r\n " +
"                           term: request.term,\r\n                            regi" +
"onId: function () { return $(\'#RegionId\').val(); }\r\n                        },\r\n" +
"                        success: function (data) {\r\n                            " +
"response(data);\r\n                        },\r\n                    });\r\n          " +
"      },\r\n            search: function () {\r\n                // custom minLength" +
"\r\n                var term = this.value;\r\n                if (term.length < 3) {" +
"\r\n                    return false;\r\n                }\r\n            },\r\n        " +
"    minLength: 1,\r\n            delay: 500,\r\n            select: function (event," +
" ui) {\r\n                $(\'#LocalityId\').val(ui.item.id);\r\n                $(\"#S" +
"treetName\").val(\'\');\r\n                $(\"#StreetId\").val(null);\r\n               " +
" return true;\r\n            },\r\n            change: function (event, ui) {\r\n     " +
"           var items = $(\".ui-autocomplete li:textEquals(\'\" + jqSelector($(this)" +
".val()) + \"\')\");\r\n                if (items.size() != 1) {\r\n                    " +
"$(this).val(\'\');\r\n\r\n                } else {\r\n                    $(\'#LocalityId" +
"\').val(items.data(\"ui-autocomplete-item\").id);\r\n                    $(\'#Locality" +
"Name\').val(items.data(\"ui-autocomplete-item\").value);\r\n                    $(\"#S" +
"treetName\").val(\'\');\r\n                    $(\"#StreetId\").val(null);\r\n           " +
"     }\r\n            }\r\n        });\r\n\r\n        $(\'#StreetName\').autocomplete({\r\n " +
"           source: function (request, response) {\r\n                $.ajax({\r\n   " +
"                 url: \'");

            
            #line 201 "..\..\Views\Shared\NewAddress.cshtml"
                     Write(Url.Action("UIAddresses", "Clients"));

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                    dataType: \"json\",\r\n                    data: {\r\n         " +
"               term: request.term,\r\n                        cityId: function () " +
"{ return $(\'#LocalityId\').val(); }\r\n                    },\r\n                    " +
"success: function (data) {\r\n                        response(data);\r\n           " +
"         },\r\n                });\r\n            },\r\n            select: function (" +
"event, ui) {\r\n                setStreetData(ui.item);\r\n            },\r\n         " +
"   change: function (event, ui) {\r\n                var items = $(\".ui-autocomple" +
"te li:textEquals(\'\" + jqSelector($(this).val()) + \"\')\");\r\n                //if (" +
"items.size() != 1) {\r\n                //    $(this).val(\'\');\r\n\r\n                " +
"//} else {\r\n                    setStreetData(items.data(\"ui-autocomplete-item\")" +
");\r\n                //}\r\n            }\r\n        });\r\n\r\n        $(\"#newAddress-fo" +
"rm\").data(this[0], \"validator\", null);\r\n        $(\"#newAddress-form\").validate({" +
"\r\n            rules: {\r\n                LocalityName: {\r\n                    req" +
"uired: true\r\n                },\r\n                StreetName: {\r\n                " +
"    required: true\r\n                },\r\n                House: {\r\n              " +
"      required: true\r\n                },\r\n                Comment: {\r\n          " +
"          maxlength: 100\r\n                }\r\n            }\r\n        });\r\n\r\n     " +
"   setInterval(\'commentChanged();\', 250);\r\n    });\r\n\r\n    function setStreetData" +
"(item) {\r\n        if (item) {\r\n            $(\'#StreetId\').val(item.id);\r\n       " +
"     $(\'#StreetName\').val(item.value);\r\n\r\n            if (item.HaveDistricts) {\r" +
"\n                $(\'#DistrictRow\').show();\r\n                //$(\"#DistrictName\")" +
".rules(\"add\", { required: true });\r\n                $(\"#DistrictId\").rules(\"add\"" +
", { required: true });\r\n                NewAddressStreetSelect($(\'#LocalityId\')." +
"val(), item.id);\r\n            } else {\r\n                $(\'#DistrictRow\').hide()" +
";\r\n                //$(\"#DistrictName\").rules(\"remove\");\r\n                $(\"#Di" +
"strictId\").rules(\"remove\");\r\n                //$(\"#DistrictId\").val(null);\r\n    " +
"            $(\"#DistrictId\").text(\'\');\r\n            }\r\n        }\r\n    }\r\n\r\n    f" +
"unction NewAddressStreetSelect(cityId, streetId) {\r\n        // var addressId = $" +
"(\'#AddressId\').val();\r\n        //var streetyId = $(\'#DeliveryLocalityId\').val();" +
"\r\n        var url = \'");

            
            #line 270 "..\..\Views\Shared\NewAddress.cshtml"
              Write(Url.Action("Districts", "Clients"));

            
            #line default
            #line hidden
WriteLiteral(@"?cityId=' + cityId + '&streetId=' + streetId + '&limit=100&q=';
        $.getJSON(url, { date: (new Date().getTime()) }, function (items) {
            $('#DistrictId').text('');
            $.each(items, function () {
                $('#DistrictId').append('<option value=""' + this.Id + '"">' + this.Name + '</option>');
            });
        });
    }

    function commentChanged() {
        var length = $('#Comment').val().length;
        if (length > 100) {
            $('#Comment').val($('#Comment').val().substr(0, 100));
            length = 100;
        }
        $('#rest').text(100 - length);
    }

");

            
            #line 288 "..\..\Views\Shared\NewAddress.cshtml"
    
            
            #line default
            #line hidden
            
            #line 288 "..\..\Views\Shared\NewAddress.cshtml"
     if (latinOnly)
    {

            
            #line default
            #line hidden
WriteLiteral("        ");

WriteLiteral(@"
        function Latin(obj) {
        if (/^[a-zA-Z0-9 ,.\-:""()]*?$/.test(obj.value)) {
            $(""#lat_msg"").hide();
            obj.defaultValue = obj.value;
        }
        else {
            $(""#lat_msg"").show();
            obj.value = obj.defaultValue;
        }
    }
    ");

WriteLiteral("\r\n");

            
            #line 302 "..\..\Views\Shared\NewAddress.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n    (function ($) {\r\n        $.widget(\"custom.combobox\", {\r\n            _crea" +
"te: function () {\r\n                this.wrapper = $(\"<span>\")\r\n                 " +
" .addClass(\"custom-combobox\")\r\n                  .insertAfter(this.element);\r\n\r\n" +
"                this.element.hide();\r\n                this._createAutocomplete()" +
";\r\n                this._createShowAllButton();\r\n            },\r\n\r\n            _" +
"createAutocomplete: function () {\r\n                var selected = this.element.c" +
"hildren(\":selected\"),\r\n                  value = selected.val() ? selected.text(" +
") : \"\";\r\n\r\n                this.input = $(\"<input>\")\r\n                  .appendT" +
"o(this.wrapper)\r\n                  .val(value)\r\n                  .attr(\"title\"," +
" \"\")\r\n                  .addClass(\"custom-combobox-input ui-widget ui-widget-con" +
"tent ui-state-default ui-corner-left\")\r\n                  .autocomplete({\r\n     " +
"                 delay: 0,\r\n                      minLength: 0,\r\n               " +
"       source: $.proxy(this, \"_source\")\r\n                  })\r\n                 " +
" .tooltip({\r\n                      tooltipClass: \"ui-state-highlight\"\r\n         " +
"         });\r\n\r\n                this._on(this.input, {\r\n                    auto" +
"completeselect: function (event, ui) {\r\n                        ui.item.option.s" +
"elected = true;\r\n                        this._trigger(\"select\", event, {\r\n     " +
"                       item: ui.item.option\r\n                        });\r\n      " +
"              },\r\n\r\n                    autocompletechange: \"_removeIfInvalid\"\r\n" +
"                });\r\n            },\r\n\r\n            _createShowAllButton: functio" +
"n () {\r\n                var input = this.input,\r\n                  wasOpen = fal" +
"se;\r\n\r\n                $(\"<a>\")\r\n                  .attr(\"tabIndex\", -1)\r\n      " +
"            .attr(\"title\", \"Show All Items\")\r\n                  .tooltip()\r\n    " +
"              .appendTo(this.wrapper)\r\n                  .button({\r\n            " +
"          icons: {\r\n                          primary: \"ui-icon-triangle-1-s\"\r\n " +
"                     },\r\n                      text: false\r\n                  })" +
"\r\n                  .removeClass(\"ui-corner-all\")\r\n                  .addClass(\"" +
"custom-combobox-toggle ui-corner-right\")\r\n                  .mousedown(function " +
"() {\r\n                      wasOpen = input.autocomplete(\"widget\").is(\":visible\"" +
");\r\n                  })\r\n                  .click(function () {\r\n              " +
"        input.focus();\r\n\r\n                      // Close if already visible\r\n   " +
"                   if (wasOpen) {\r\n                          return;\r\n          " +
"            }\r\n\r\n                      // Pass empty string as value to search f" +
"or, displaying all results\r\n                      input.autocomplete(\"search\", \"" +
"\");\r\n                  });\r\n            },\r\n\r\n            _source: function (req" +
"uest, response) {\r\n                var matcher = new RegExp($.ui.autocomplete.es" +
"capeRegex(request.term), \"i\");\r\n                response(this.element.children(\"" +
"option\").map(function () {\r\n                    var text = $(this).text();\r\n    " +
"                if (this.value && (!request.term || matcher.test(text)))\r\n      " +
"                  return {\r\n                            label: text,\r\n          " +
"                  value: text,\r\n                            option: this\r\n      " +
"                  };\r\n                }));\r\n            },\r\n\r\n            _remov" +
"eIfInvalid: function (event, ui) {\r\n\r\n                // Selected an item, nothi" +
"ng to do\r\n                if (ui.item) {\r\n                    return;\r\n         " +
"       }\r\n\r\n                // Search for a match (case-insensitive)\r\n          " +
"      var value = this.input.val(),\r\n                  valueLowerCase = value.to" +
"LowerCase(),\r\n                  valid = false;\r\n                this.element.chi" +
"ldren(\"option\").each(function () {\r\n                    if ($(this).text().toLow" +
"erCase() === valueLowerCase) {\r\n                        this.selected = valid = " +
"true;\r\n                        return false;\r\n                    }\r\n           " +
"     });\r\n\r\n                // Found a match, nothing to do\r\n                if " +
"(valid) {\r\n                    return;\r\n                }\r\n\r\n                // " +
"Remove invalid value\r\n                this.input\r\n                  .val(\"\")\r\n  " +
"                .attr(\"title\", value + \" didn\'t match any item\")\r\n              " +
"    .tooltip(\"open\");\r\n                this.element.val(\"\");\r\n                th" +
"is._delay(function () {\r\n                    this.input.tooltip(\"close\").attr(\"t" +
"itle\", \"\");\r\n                }, 2500);\r\n                this.input.autocomplete(" +
"\"instance\").term = \"\";\r\n            },\r\n\r\n            _destroy: function () {\r\n " +
"               this.wrapper.remove();\r\n                this.element.show();\r\n   " +
"         }\r\n        });\r\n    })(jQuery);\r\n\r\n</script>\r\n\r\n\r\n<script>\r\n    functio" +
"n editAddress(el, id, localityId, localityName, streetId, streetName, house, fla" +
"t, zip, comment, editCallback) {\r\n        $(\'#dlgAddress #AddressId\').val(id);\r\n" +
"\r\n        $(\'#dlgAddress #LocalityId\').val(localityId);\r\n        $(\'#dlgAddress " +
"#LocalityName\').val(localityName);\r\n        $(\'#dlgAddress #StreetId\').val(stree" +
"tId);\r\n        $(\'#dlgAddress #StreetName\').val(streetName);\r\n\r\n        $(\'#dlgA" +
"ddress #House\').val(house);\r\n        $(\'#dlgAddress #Flat\').val(flat);\r\n        " +
"$(\'#dlgAddress #Zip\').val(zip);\r\n\r\n        $(\'#dlgAddress #Comment\').val(comment" +
");\r\n\r\n        $(\'#dlgAddress\').dialog(\'open\');\r\n\r\n        $(\'#dlgAddress\').dialo" +
"g(\"widget\").position({\r\n            my: \"right top\",\r\n            at: \"right bot" +
"tom\",\r\n            of: el\r\n        });\r\n\r\n        window.addressEditCallback = e" +
"ditCallback;\r\n\r\n        return false;\r\n    }\r\n\r\n    function newAddress() {\r\n   " +
"     $(\'#dlgAddress #AddressId\').val(null);\r\n\r\n        $(\'#dlgAddress #LocalityI" +
"d\').val(null);\r\n        $(\'#dlgAddress #LocalityName\').val(\'\');\r\n        $(\'#dlg" +
"Address #StreetId\').val(null);\r\n        $(\'#dlgAddress #StreetName\').val(\'\');\r\n\r" +
"\n        $(\'#dlgAddress #House\').val(\'\');\r\n        $(\'#dlgAddress #Flat\').val(\'\'" +
");\r\n        $(\'#dlgAddress #Zip\').val(\'\');\r\n        $(\'#dlgAddress #Comment\').va" +
"l(\'\');\r\n\r\n\r\n        $(\'#dlgAddress\').dialog(\'open\');\r\n\r\n        $(\'#dlgAddress\')" +
".dialog(\"widget\").position({\r\n            my: \"right top\",\r\n            at: \"rig" +
"ht bottom\",\r\n            of: \"#opener\"\r\n        });\r\n\r\n        return false;\r\n  " +
"  }\r\n</script>");

        }
    }
}
#pragma warning restore 1591
