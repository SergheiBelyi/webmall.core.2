#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.Globalization;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using HtmlHelpers.BeginCollectionItem;
    
    #line 1 "..\..\Views\Lxm\Groups.cshtml"
    using ViewRes;
    
    #line default
    #line hidden
    using Webmall.UI;
    using Webmall.UI.Core.Localization;
    
    #line 2 "..\..\Views\Lxm\Groups.cshtml"
    using Webmall.UI.Core.Renderers;
    
    #line default
    #line hidden
    
    #line 3 "..\..\Views\Lxm\Groups.cshtml"
    using Webmall.UI.Models.Laximo;
    
    #line default
    #line hidden
    
    #line 4 "..\..\Views\Lxm\Groups.cshtml"
    using Webmall.UI.ViewModel;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Lxm/Groups.cshtml")]
    public partial class _Views_Lxm_Groups_cshtml : System.Web.Mvc.WebViewPage<GroupsModel>
    {
        public _Views_Lxm_Groups_cshtml()
        {
        }
        public override void Execute()
        {
WriteLiteral("\r\n");

            
            #line 8 "..\..\Views\Lxm\Groups.cshtml"
  
    Layout = "~/Views/Shared/_Inner.cshtml";
    var renderGroups = Model.SelectedGroup == null || (!((GroupTree)Model.SelectedGroup).Group.IsLink || (Model.SelectedGroup.Children != null && Model.SelectedGroup.Children.Any()));

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");

DefineSection("BreadCrumbs", () => {

WriteLiteral("\r\n");

            
            #line 14 "..\..\Views\Lxm\Groups.cshtml"
    
            
            #line default
            #line hidden
            
            #line 14 "..\..\Views\Lxm\Groups.cshtml"
      
        var links = new List<BreadCrumbsModel>
        {
            new BreadCrumbsModel
            {
                Url = Model.Type == "Auto" ? Url.Action("Selection", "SelectionByAuto") + "#section-3" : Url.Action("VinSearch", Model.Clone()),
                Name = Model.VehicleInfo.Brand + " " + Model.VehicleInfo.Name
            },
            new BreadCrumbsModel {Name = SharedResources.SelectByGroups}
        };
    
            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 25 "..\..\Views\Lxm\Groups.cshtml"
    
            
            #line default
            #line hidden
            
            #line 25 "..\..\Views\Lxm\Groups.cshtml"
      Html.RenderPartial("Components/BreadCrumbsRender", links);
            
            #line default
            #line hidden
WriteLiteral("\r\n");

});

WriteLiteral("\r\n");

DefineSection("Sidebar", () => {

WriteLiteral("\r\n    <aside");

WriteLiteral(" class=\"match-area__aside filter\"");

WriteLiteral(">\r\n        <!-- tree-nav-widget-->\r\n        <div");

WriteLiteral(" class=\"match-area__nav tree-nav-widget js-accordion is-active\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" class=\"tree-nav-widget__header\"");

WriteLiteral(">\r\n                <div");

WriteLiteral(" class=\"tree-nav-widget__heading js-accordion-trigger\"");

WriteLiteral(">");

            
            #line 33 "..\..\Views\Lxm\Groups.cshtml"
                                                                      Write(Model.VehicleInfo.Brand);

            
            #line default
            #line hidden
WriteLiteral(" ");

            
            #line 33 "..\..\Views\Lxm\Groups.cshtml"
                                                                                               Write(Model.VehicleInfo.Name);

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n            </div>\r\n            <div");

WriteLiteral(" class=\"tree-nav-widget__main js-accordion-body\"");

WriteLiteral(">\r\n                <nav");

WriteLiteral(" class=\"tree-nav-widget__nav tree-nav\"");

WriteLiteral(">\r\n");

WriteLiteral("                    ");

            
            #line 37 "..\..\Views\Lxm\Groups.cshtml"
                Write(new HtmlString(Html.RenderTree(Model.Groups, Model.SelectedGroup, "groups", gr =>
                    {
                        var baseModel = Model.Clone();
                        baseModel.CategoryId = gr.Id;
                        var group = (GroupTree)gr;
                        return group.Group.IsLink ? "<a href=\"\" onclick=\"updateUnitInfo('" + Url.Action("GroupDetails", new { Model.VehicleId, Model.CatalogId, Model.CategoryId, Model.Ssd, groupId = gr.Id, Model.Type }) + "', event);\">" + gr.Name + "</a>" : gr.Name;
                    })));

            
            #line default
            #line hidden
WriteLiteral("\r\n                </nav>\r\n            </div>\r\n        </div><!-- /tree-nav-widget" +
"-->\r\n    </aside>\r\n");

});

WriteLiteral("\r\n<button");

WriteLiteral(" class=\"filter-toggle match-area__filter-toggle\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(">\r\n    <svg");

WriteLiteral(" class=\"icon icon-tree filter-toggle__icon\"");

WriteLiteral(" width=\"25\"");

WriteLiteral(" height=\"25\"");

WriteLiteral(">\r\n        <use");

WriteAttribute("href", Tuple.Create(" href=\"", 2280), Tuple.Create("\"", 2345)
            
            #line 52 "..\..\Views\Lxm\Groups.cshtml"
, Tuple.Create(Tuple.Create("", 2287), Tuple.Create<System.Object, System.Int32>(Url.Content("~/assets/images/svg/symbol/sprite.svg#tree")
            
            #line default
            #line hidden
, 2287), false)
);

WriteLiteral("></use>\r\n    </svg>\r\n    <span");

WriteLiteral(" class=\"filter-toggle__text\"");

WriteLiteral(">");

            
            #line 54 "..\..\Views\Lxm\Groups.cshtml"
                                 Write(SharedResources.Categories);

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n</button>\r\n\r\n");

WriteLiteral("\r\n\r\n<main");

WriteLiteral(" class=\"match-area__main\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" class=\"match-area__tabs tabs js-tabs\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"tabs__header\"");

WriteLiteral(">\r\n            <ul");

WriteLiteral(" class=\"tabs__list\"");

WriteLiteral(">\r\n                <li");

WriteLiteral(" class=\"tabs__item js-tabs-item\"");

WriteLiteral(">\r\n                    <a");

WriteLiteral(" class=\"tabs__link is-active\"");

WriteAttribute("href", Tuple.Create(" href=\"", 3116), Tuple.Create("\"", 3159)
            
            #line 72 "..\..\Views\Lxm\Groups.cshtml"
, Tuple.Create(Tuple.Create("", 3123), Tuple.Create<System.Object, System.Int32>(Url.Action("Groups", Model.Clone())
            
            #line default
            #line hidden
, 3123), false)
);

WriteLiteral(">");

            
            #line 72 "..\..\Views\Lxm\Groups.cshtml"
                                                                                           Write(SharedResources.SelectByGroups);

            
            #line default
            #line hidden
WriteLiteral("</a>\r\n                </li>\r\n                <li");

WriteLiteral(" class=\"tabs__item js-tabs-item\"");

WriteLiteral(">\r\n                    <a");

WriteLiteral(" class=\"tabs__link\"");

WriteAttribute("href", Tuple.Create(" href=\"", 3316), Tuple.Create("\"", 3363)
            
            #line 75 "..\..\Views\Lxm\Groups.cshtml"
, Tuple.Create(Tuple.Create("", 3323), Tuple.Create<System.Object, System.Int32>(Url.Action("Categories", Model.Clone())
            
            #line default
            #line hidden
, 3323), false)
);

WriteLiteral(">");

            
            #line 75 "..\..\Views\Lxm\Groups.cshtml"
                                                                                     Write(SharedResources.SelectByCategories);

            
            #line default
            #line hidden
WriteLiteral("</a>\r\n                </li>\r\n            </ul>\r\n            <div");

WriteLiteral(" class=\"tabs__panes\"");

WriteLiteral(">\r\n                <div");

WriteLiteral(" class=\"tabs__pane js-tabs-pane is-active\"");

WriteLiteral(" id=\"groupDetail\"");

WriteLiteral(">\r\n");

            
            #line 80 "..\..\Views\Lxm\Groups.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 80 "..\..\Views\Lxm\Groups.cshtml"
                     if (renderGroups)
                    {
                        Html.RenderPartial("SelectionByAutoGroupsAsImages", Model);
                    }

            
            #line default
            #line hidden
WriteLiteral("                </div>\r\n                <div");

WriteLiteral(" class=\"tabs__pane js-tabs-pane\"");

WriteLiteral("></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</main>\r\n");

DefineSection("styles", () => {

WriteLiteral("\r\n    ");

WriteLiteral("\r\n    ");

WriteLiteral("\r\n");

});

WriteLiteral("\r\n");

DefineSection("scripts", () => {

WriteLiteral("\r\n    <script>\r\n        $(function () {\r\n            var searchInput = $(\'#search" +
"Input\');\r\n            searchInput.click(stopEvent);\r\n            searchInput.cha" +
"nge(function() {\r\n                searchGroup(searchInput.val());\r\n            }" +
");\r\n            searchInput.keyup(function () {\r\n                searchGroup(sea" +
"rchInput.val());\r\n            });\r\n        });\r\n\r\n        function updateUnitInf" +
"o(url, e) {\r\n            updatePannel(url, \'groupDetail\', \'progressWindow\', tipp" +
"yInitGroupDetail);\r\n            if (e) {\r\n                $(\"li.current\").remove" +
"Class(\"current\");\r\n                e.srcElement.parentElement.classList.add(\"cur" +
"rent\");\r\n                e.preventDefault();\r\n            }\r\n        }\r\n\r\n      " +
"  function tippyInitGroupDetail() {\r\n            tippy(\'.group-tippy\',\r\n        " +
"        {\r\n                    allowHTML: true,\r\n                    content: \'L" +
"oading...\',\r\n                    onCreate(instance) {\r\n                        /" +
"/ Setup our own custom state properties\r\n                        instance._isFet" +
"ching = false;\r\n                        instance._src = null;\r\n                 " +
"       instance._error = null;\r\n                    },\r\n                    onSh" +
"ow(instance) {\r\n                        if (instance._isFetching || instance._sr" +
"c || instance._error) {\r\n                            return;\r\n                  " +
"      }\r\n                        instance._isFetching = true;\r\n                 " +
"       instance.setContent(g_getHint(instance.reference));\r\n                    " +
"    instance._isFetching = false;\r\n                    },\r\n                    o" +
"nHidden(instance) {\r\n                        instance.setContent(\'Loading...\');\r" +
"\n                        // Unset these properties so new network requests can b" +
"e initiated\r\n                        instance._src = null;\r\n                    " +
"    instance._error = null;\r\n                    }\r\n                });\r\n       " +
"     tippy(\'.group-tippy-mobile\',\r\n                {\r\n                    allowH" +
"TML: true,\r\n                    content: \'Loading...\',\r\n                    onCr" +
"eate(instance) {\r\n                        // Setup our own custom state properti" +
"es\r\n                        instance._isFetching = false;\r\n                     " +
"   instance._src = null;\r\n                        instance._error = null;\r\n     " +
"               },\r\n                    onShow(instance) {\r\n                     " +
"   if (instance._isFetching || instance._src || instance._error) {\r\n            " +
"                return;\r\n                        }\r\n                        inst" +
"ance._isFetching = true;\r\n                        instance.setContent(g_getHint(" +
"document.getElementById(instance.reference.dataset.id)));\r\n                     " +
"   instance._isFetching = false;\r\n                    },\r\n                    on" +
"Hidden(instance) {\r\n                        instance.setContent(\'Loading...\');\r\n" +
"                        // Unset these properties so new network requests can be" +
" initiated\r\n                        instance._src = null;\r\n                     " +
"   instance._error = null;\r\n                    }\r\n                });\r\n        " +
"}\r\n\r\n        function searchGroup(searchStr) {\r\n            var nav = $(\'#filter" +
"edNavigation\');\r\n            var show = false;\r\n\r\n            nav.hide();\r\n     " +
"       nav.html(\'\');\r\n            if (searchStr.length >= 3) {\r\n                " +
"updatePannel(\'");

            
            #line 179 "..\..\Views\Lxm\Groups.cshtml"
                          Write(Html.Raw(Url.Action("FilteredGroups", new { Model.VehicleId, Model.CatalogId, Model.CategoryId, Model.Ssd })));

            
            #line default
            #line hidden
WriteLiteral(@"&filter=' + searchStr, 'filteredNavigation', null,
                    function () {
                        let treeNavs = document.querySelectorAll('#filteredNavigation');

                        treeNavs.forEach(function (item) {
                            item.querySelectorAll('li').forEach(function (item) {
                                if (!item.querySelector('ul')) return;

                                item.classList.add('has-children', 'is-active');
                                item.prepend(createTreeNavToggle());
                            });
                        });

                        document.querySelectorAll('#filteredNavigation li.has-children > .tree-nav__toggle').forEach(function (item) {
                            item.addEventListener('click', function (e) {
                                this.closest('li').classList.toggle('is-active');

                                e.preventDefault();
                            });
                        });
                    });
                show = true;
            }

            if (show) {
                nav.show();
                $(""#groups"").hide();
            } else {
                $(""#groups"").show();
            }
        }

");

            
            #line 211 "..\..\Views\Lxm\Groups.cshtml"
        
            
            #line default
            #line hidden
            
            #line 211 "..\..\Views\Lxm\Groups.cshtml"
         if (!renderGroups)
        {

            
            #line default
            #line hidden
WriteLiteral("            ");

WriteLiteral("\r\n                updateUnitInfo(\'");

            
            #line 214 "..\..\Views\Lxm\Groups.cshtml"
                           Write(Html.Raw(Url.Action("GroupDetails", new { Model.VehicleId, Model.CatalogId, Model.CategoryId, Model.Ssd, groupId = Model.SelectedGroup.Id })));

            
            #line default
            #line hidden
WriteLiteral("\');\r\n            ");

WriteLiteral("\r\n");

            
            #line 216 "..\..\Views\Lxm\Groups.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("    </script>\r\n");

WriteLiteral("    ");

            
            #line 218 "..\..\Views\Lxm\Groups.cshtml"
Write(Scripts.Render("~/bundles/laximo"));

            
            #line default
            #line hidden
WriteLiteral("\r\n");

});

        }
    }
}
#pragma warning restore 1591
