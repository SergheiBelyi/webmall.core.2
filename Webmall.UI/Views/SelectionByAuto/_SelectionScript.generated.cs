#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.Globalization;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using HtmlHelpers.BeginCollectionItem;
    using Webmall.UI;
    
    #line 1 "..\..\Views\SelectionByAuto\_SelectionScript.cshtml"
    using Webmall.UI.Core;
    
    #line default
    #line hidden
    using Webmall.UI.Core.Localization;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/SelectionByAuto/_SelectionScript.cshtml")]
    public partial class _Views_SelectionByAuto__SelectionScript_cshtml : System.Web.Mvc.WebViewPage<Webmall.UI.Models.SelectionByAuto.SelectionByAutoMarkModel>
    {
        public _Views_SelectionByAuto__SelectionScript_cshtml()
        {
        }
        public override void Execute()
        {
WriteLiteral("<script>\r\n    $(function() {\r\n        document.carSelect = [];\r\n\r\n        /* Choi" +
"ces Statuses */\r\n        /* Choices Select Car */\r\n        if (document.querySel" +
"ector(\'.js-select-car\')) {\r\n\r\n            $(\'.js-select-car\').each(function(i, i" +
"tem, arr) {\r\n                document.carSelect[i] = new Choices(item,\r\n        " +
"            {\r\n                        delimiter: \',\',\r\n                        " +
"itemSelectText: \'\',\r\n                        searchResultLimit: 20\r\n            " +
"        });\r\n            });\r\n            var carSelect = document.carSelect;\r\n " +
"           /* Disable Selects */\r\n            carSelect.forEach(function(item, i" +
") {\r\n                if (i > 1) {\r\n                    carSelect[i].disable();\r\n" +
"                }\r\n            });\r\n            /* Disable Selects */\r\n\r\n       " +
"     /* Enable Selects */\r\n            carSelect.forEach(function(item, i, arr) " +
"{\r\n                let order = i + 1;\r\n\r\n                if (carSelect[i].passed" +
"Element) {\r\n                    let elem = carSelect[i].passedElement.element;\r\n" +
"\r\n                    elem.addEventListener(\'change\',\r\n                        f" +
"unction() {\r\n\r\n                            if (arr[order] && arr[order].passedEl" +
"ement) {\r\n                                let nextElem = arr[order].passedElemen" +
"t;\r\n\r\n                                if (nextElem.isDisabled) {\r\n              " +
"                      arr[order].enable();\r\n                                    " +
"nextElem.enable();\r\n                                }\r\n                         " +
"   }\r\n\r\n                        });\r\n                }\r\n\r\n            });\r\n     " +
"       /* Enable Selects */\r\n        }\r\n        /* Choices Select Car */\r\n\r\n    " +
"    /* Choices Select Lxm */\r\n        var lxmSelect;\r\n        /* Choices Select " +
"Lxm */\r\n        if (document.querySelector(\'.js-select-lxm\')) {\r\n            doc" +
"ument.lxmSelect = new Choices(\'.js-select-lxm\',\r\n                {\r\n            " +
"        delimiter: \',\',\r\n                    itemSelectText: \'\',\r\n              " +
"      searchResultLimit: 20\r\n                });\r\n        }\r\n        /* Choices " +
"Select Lxm */\r\n\r\n        /* Choices Select Truck */\r\n        if (document.queryS" +
"elector(\'.js-select-truck\')) {\r\n            let truckSelect = new Choices(\'.js-s" +
"elect-truck\',\r\n                {\r\n                    delimiter: \',\',\r\n         " +
"           itemSelectText: \'\',\r\n                    searchResultLimit: 20\r\n     " +
"           });\r\n\r\n            /* Disable Selects */\r\n            truckSelect.for" +
"Each(function(item, i) {\r\n                if (i > 1) {\r\n                    truc" +
"kSelect[i].disable();\r\n                }\r\n            });\r\n            //labelVa" +
"l = label.innerHTML;\r\n            /* Disable Selects */\r\n\r\n            /* Enable" +
" Selects */\r\n            truckSelect.forEach(function(item, i, arr) {\r\n         " +
"       let order = i + 1;\r\n\r\n                if (truckSelect[i].passedElement) {" +
"\r\n                    let elem = truckSelect[i].passedElement.element;\r\n\r\n      " +
"              elem.addEventListener(\'change\',\r\n                        function(" +
") {\r\n\r\n                            if (arr[order] && arr[order].passedElement) {" +
"\r\n                                console.log(arr[order].getValue(true));\r\n\r\n   " +
"                             let nextElem = arr[order].passedElement;\r\n\r\n       " +
"                         if (nextElem.isDisabled) {\r\n                           " +
"         arr[order].enable();\r\n                                    nextElem.enab" +
"le();\r\n                                }\r\n                            }\r\n\r\n     " +
"                   });\r\n                }\r\n\r\n            });\r\n            /* Ena" +
"ble Selects */\r\n        }\r\n        /* Choices Select Truck */\r\n\r\n\r\n        $(\'#A" +
"utoMark\').on(\"change\", AutoMarkSelected);\r\n        $(\'#LxmCatalog\').on(\"change\"," +
" LxmCatalogSelected);\r\n\r\n");

            
            #line 120 "..\..\Views\SelectionByAuto\_SelectionScript.cshtml"
        
            
            #line default
            #line hidden
            
            #line 120 "..\..\Views\SelectionByAuto\_SelectionScript.cshtml"
         if (Model.AutoMark.HasValue)
        {

            
            #line default
            #line hidden
WriteLiteral("            ");

WriteLiteral("\r\n                document.carSelect[2].enable();\r\n                AutoMarkSelect" +
"ed();\r\n            ");

WriteLiteral("\r\n");

            
            #line 126 "..\..\Views\SelectionByAuto\_SelectionScript.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 128 "..\..\Views\SelectionByAuto\_SelectionScript.cshtml"
        
            
            #line default
            #line hidden
            
            #line 128 "..\..\Views\SelectionByAuto\_SelectionScript.cshtml"
         if (Model.AutoModel.HasValue)
        {

            
            #line default
            #line hidden
WriteLiteral("            ");

WriteLiteral("\r\n                document.carSelect[3].enable();\r\n            ");

WriteLiteral("\r\n");

            
            #line 133 "..\..\Views\SelectionByAuto\_SelectionScript.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral(@"
        document.querySelectorAll('.tabs__link').forEach(function(item, i) {
            item.addEventListener('click',
                function(e) {
                    $("".tabs__item_ex"").hide();
                    $("".tabs__item_ex-"" + (i + 1)).show();
                });

        });

        let currentHash = window.location.hash;
        let hashTab = document.querySelector('.tabs__link[href=""' + currentHash + '""]');
        if (hashTab) {
            let ev = new Event('click');
            hashTab.dispatchEvent(ev);
        }

    });

    function AutoMarkSelected(obj) {
        var markId = document.carSelect[0].getValue(true);
        var models = document.carSelect[1];
        models.setValue([""""]);

        $.getJSON('");

            
            #line 158 "..\..\Views\SelectionByAuto\_SelectionScript.cshtml"
              Write(Url.Action("GetModelsList"));

            
            #line default
            #line hidden
WriteLiteral("?markId=\' + markId).done(function(data) {\r\n            models.setChoices(data, \'V" +
"alue\', \'Text\', true);\r\n            if (!obj) {\r\n                models.setChoice" +
"ByValue(\'");

            
            #line 161 "..\..\Views\SelectionByAuto\_SelectionScript.cshtml"
                                    Write(Model.AutoModel);

            
            #line default
            #line hidden
WriteLiteral("\');\r\n                AutoModelSelected();\r\n            }\r\n        });\r\n    }\r\n\r\n " +
"   function AutoModelSelected() {\r\n        $(\'input[name=\"fuelType\"]\').val(\"\");\r" +
"\n        FilterUpdate();\r\n\r\n        var modelId = $(\'#");

            
            #line 171 "..\..\Views\SelectionByAuto\_SelectionScript.cshtml"
                     Write(Html.GetFullHtmlFieldNameFor(m => m.AutoModel));

            
            #line default
            #line hidden
WriteLiteral("\').val();\r\n\r\n        var fuels = document.carSelect[2];\r\n        $.getJSON(\'");

            
            #line 174 "..\..\Views\SelectionByAuto\_SelectionScript.cshtml"
              Write(Url.Action("GetFuelTypes"));

            
            #line default
            #line hidden
WriteLiteral("?modelId=\' + modelId).done(function(data) {\r\n            fuels.setChoices(data, \'" +
"Value\', \'Text\', true);\r\n        });\r\n    }\r\n\r\n    function FilterUpdate() {\r\n   " +
"     var modelId = $(\'#");

            
            #line 180 "..\..\Views\SelectionByAuto\_SelectionScript.cshtml"
                     Write(Html.GetFullHtmlFieldNameFor(m => m.AutoModel));

            
            #line default
            #line hidden
WriteLiteral("\').val();\r\n        var markId = $(\'#");

            
            #line 181 "..\..\Views\SelectionByAuto\_SelectionScript.cshtml"
                    Write(Html.GetFullHtmlFieldNameFor(m => m.AutoMark));

            
            #line default
            #line hidden
WriteLiteral(@"').val();

        var yearOfProduce = $('#yearOfProduce').val();
        var volume = $('#volume').val();
        var volumePercent = $('#volumePercent').prop(""checked"") ? $('#volumePercent').val() : 0;
        var fuelType = $('#fuelType').val();
        var power = $('#power').val();
        var powerUnit = $('#powerUnit').val();
        var powerPercent = $('#powerPercent').prop(""checked"") ? $('#powerPercent').val() : 0;

        var url = '");

            
            #line 191 "..\..\Views\SelectionByAuto\_SelectionScript.cshtml"
              Write(Url.Action("ModifList"));

            
            #line default
            #line hidden
WriteLiteral(@"' + '?markId=' + markId + '&modelId=' + modelId;
        url += (yearOfProduce) ? ""&yearOfProduce="" + yearOfProduce : """";
        url += (volume) ? ""&volume="" + volume : """";
        url += (volumePercent) ? ""&volumePercent="" + volumePercent : """";
        url += (fuelType) ? ""&fuelType="" + fuelType : """";
        url += (power) ? ""&power="" + power : """";
        url += (powerUnit) ? ""&powerUnit="" + powerUnit : """";
        url += (powerPercent) ? ""&powerPercent="" + powerPercent : """";

        updatePannel(url, 'modifications', null, tippyInitModif);
    }

    function tippyInitModif() {
        tippy('.auto-tippy', {
                    allowHTML: true,
                    content: 'Loading...',
                    onCreate(instance) {
                        // Setup our own custom state properties
                        instance._isFetching = false;
                        instance._src = null;
                        instance._error = null;
                    },
                    onShow(instance) {
                        if (instance._isFetching || instance._src || instance._error) {
                            return;
                        }
                        instance._isFetching = true;
                        fetch('");

            
            #line 218 "..\..\Views\SelectionByAuto\_SelectionScript.cshtml"
                           Write(Url.Action("Info")+"?modifId=");

            
            #line default
            #line hidden
WriteLiteral("\'+instance.reference.id)\r\n                            .then((response) => respons" +
"e.text())\r\n                            .then((text) => {\r\n                      " +
"          // Convert the blob into a URL\r\n                                //cons" +
"t url = URL.createObjectURL(blob);\r\n                                //// Create " +
"an image\r\n                                //const image = new Image();\r\n        " +
"                        //image.width = 200;\r\n                                //" +
"image.height = 200;\r\n                                //image.style.display = \'bl" +
"ock\';\r\n                                //image.src = url;\r\n                     " +
"           // Update the tippy content with the image\r\n                         " +
"       instance.setContent(text);\r\n                            })\r\n             " +
"               .catch((error) => {\r\n                                // Fallback " +
"if the network request failed\r\n                                instance.setConte" +
"nt(`Request failed. ${error}`);\r\n                            })\r\n               " +
"             .finally(() => {\r\n                                instance._isFetch" +
"ing = false;\r\n                            });\r\n                    },\r\n         " +
"           onHidden(instance) {\r\n                        instance.setContent(\'Lo" +
"ading...\');\r\n                        // Unset these properties so new network re" +
"quests can be initiated\r\n                        instance._src = null;\r\n        " +
"                instance._error = null;\r\n                    }\r\n                " +
"});\r\n    }\r\n\r\n    function LxmCatalogSelected(obj) {\r\n        updateLaximoWizard" +
"(document.getElementById(\"LxmCatalog\").value);\r\n    }\r\n\r\n    document.lxmSelect " +
"= new Array(1);\r\n    function updateLaximoWizard(catalogId, ssd) {\r\n        upda" +
"tePannel(\'");

            
            #line 255 "..\..\Views\SelectionByAuto\_SelectionScript.cshtml"
                 Write(Url.Action("Wizard", "Lxm"));

            
            #line default
            #line hidden
WriteLiteral("\' + \"?catalogId=\" + catalogId + (ssd ? \"&ssd=\" + ssd : \"\"),\r\n            \"WizardP" +
"annel\",\r\n            \"WizardPannelLoader\",\r\n            function() {\r\n          " +
"      document.lxmSelect = new Array(15);\r\n                $(\'#WizardPannel .js-" +
"select-lxm\').each(function(i, item, arr) {\r\n                    document.lxmSele" +
"ct[i] = new Choices(item,\r\n                        {\r\n                          " +
"  delimiter: \',\',\r\n                            itemSelectText: \'\'\r\n             " +
"               //searchResultLimit: 20\r\n                        });\r\n           " +
"     });\r\n                //document.lxmSelect = new Choices(\'#WizardPannel .js-" +
"select-lxm\',\r\n                //    {\r\n                //        delimiter: \',\'," +
"\r\n                //        itemSelectText: \'\'\r\n                //    });\r\n     " +
"           //if (!(document.lxmSelect instanceof Array)) {\r\n                //  " +
"  document.lxmSelect = new Array(1).fill(document.lxmSelect);\r\n                /" +
"/}\r\n                document.lxmSelect.forEach(function(el) {\r\n                 " +
"   if (!el.passedElement) return;\r\n                    el.passedElement.element." +
"addEventListener(\r\n                        \'addItem\',\r\n                        f" +
"unction(event) {\r\n                            updateLaximoWizard(document.getEle" +
"mentById(\"LxmCatalog\").value, event.detail.value);\r\n                            " +
"console.log(event.detail.value);\r\n                            console.log(event." +
"detail.label);\r\n                        },\r\n                        false\r\n     " +
"               );\r\n                    $(\"#WizardPannel a\").click(function() {\r\n" +
"                        updateLaximoWizard(document.getElementById(\"LxmCatalog\")" +
".value, this.dataset.ssd);\r\n                        return false;\r\n             " +
"       });\r\n                });\r\n            });\r\n    }\r\n\r\n    function ShowAuto" +
"s(ssd) {\r\n        console.log(\'ShowAutos: \' + ssd);\r\n        var url = \'");

            
            #line 297 "..\..\Views\SelectionByAuto\_SelectionScript.cshtml"
              Write(Url.Action("FindVehicles", "Lxm"));

            
            #line default
            #line hidden
WriteLiteral("\' + \"?catalogId=\" + document.getElementById(\"LxmCatalog\").value + (ssd ? \"&ssd=\" " +
"+ ssd : \"\");\r\n        updatePannel(url, \'modifications\', null, tippyInitVehicles" +
");\r\n        //    updatePannel(url,\r\n        //        \'modifications\',\r\n       " +
" //        null,\r\n        //        function() {\r\n        //            //$(\"td." +
"info\").tooltip({ content: g_getHint, track: true, show: { effect: \"fade\", durati" +
"on: 250 } });\r\n        //            //document.querySelectorAll(\'.spec__heading" +
"\').forEach(function(item) {\r\n\r\n        //            //    item.addEventListener" +
"(\'click\',\r\n        //            //        function(e) {\r\n        //            " +
"//            e.target.closest(\'.spec__product\').classList.toggle(\'is-open\');\r\n " +
"       //            //        });\r\n\r\n        //            //});\r\n        //   " +
"     });\r\n    }\r\n\r\n    function tippyInitVehicles() {\r\n        tippy(\'.auto-tipp" +
"y\',\r\n            {\r\n                allowHTML: true,\r\n                content: \'" +
"Loading...\',\r\n                onCreate(instance) {\r\n                    // Setup" +
" our own custom state properties\r\n                    instance._isFetching = fal" +
"se;\r\n                    instance._src = null;\r\n                    instance._er" +
"ror = null;\r\n                },\r\n                onShow(instance) {\r\n           " +
"         if (instance._isFetching || instance._src || instance._error) {\r\n      " +
"                  return;\r\n                    }\r\n                    instance._" +
"isFetching = true;\r\n                    instance.setContent(g_getHint(instance.r" +
"eference));\r\n                    instance._isFetching = false;\r\n                " +
"},\r\n                onHidden(instance) {\r\n                    instance.setConten" +
"t(\'Loading...\');\r\n                    // Unset these properties so new network r" +
"equests can be initiated\r\n                    instance._src = null;\r\n           " +
"         instance._error = null;\r\n                }\r\n            });\r\n    }\r\n</s" +
"cript>");

        }
    }
}
#pragma warning restore 1591
